version: '3.8'

services:
  kafka:
    image: wurstmeister/kafka:latest
    container_name: kafka
    ports:
      - "9092:9092"
    environment:
      KAFKA_ADVERTISED_LISTENERS: INSIDE://kafka:9093,OUTSIDE://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
      KAFKA_LISTENERS: INSIDE://0.0.0.0:9093,OUTSIDE://0.0.0.0:9092
      KAFKA_LISTENER_NAME: INSIDE
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
    depends_on:
      - zookeeper
    entrypoint:
      - /bin/sh
      - -c
      - |
        # Start Kafka
        /usr/bin/start-kafka.sh &
        # Wait for Kafka to start
        sleep 20
        # Create topics
        kafka-topics.sh --create --topic topic_demo_json --partitions 1 --replication-factor 1 --zookeeper zookeeper:2181
        # Wait indefinitely
        tail -f /dev/null

  zookeeper:
    image: wurstmeister/zookeeper:latest
    container_name: zookeeper
    ports:
      - "2181:2181"

  kafka-producerJson-microservice:
    build:
      context: ./kafka-producerJson-microservice
    container_name: spring-boot-producer 
    depends_on:
      - kafka

  kafka-consumerJson-microservice:
    build:
      context: ./kafka-consumerJson-microservice
    container_name: spring-boot-consumer
    ports:
      - "8080:8080"
    depends_on:
      - kafka

  angular-websocket-app:
    build:
      context: ./angular-websocket-app
    container_name: angular-websocket-app
    ports:
      - "80:80"
    depends_on:
      - backend
